#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_romaji: to_romaji {
            compatible = "zmk,behavior-macro";
            label = "TO_ROMAJI";
            #binding-cells = <0>;
            bindings = <&kp LANG1>; // IME ON + ローマ字入力に切替
        };

        to_eisu: to_eisu {
            compatible = "zmk,behavior-macro";
            label = "TO_EISU";
            #binding-cells = <0>;
            bindings = <&kp LANG2>; // IME OFF（英数入力）に切替
        };
    };

    behaviors {
        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        encoder_msc_right_left: encoder_msc_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_RIGHT_LEFT";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        L0 {
            bindings = <
&kp Q           &kp L         &kp U         &kp COMMA  &kp SEMI                                           &kp F          &kp W  &kp R  &kp Y  &kp P
&kp E           &kp I         &kp A         &kp O      &kp MINUS             &kp LA(LEFT)      &mkp MB3   &kp K          &kp T  &kp N  &kp S  &kp H
&kp J           &kp X         &kp C         &kp V      &kp PERIOD            &mkp MB1          &mkp MB2   &kp G          &kp D  &kp M  &kp Z  &kp B
&kp LEFT_SHIFT  &kp LEFT_WIN  &kp LEFT_ALT  &mo 1      &mt LEFT_SHIFT SPACE  &mo 3             &lt 2 TAB  &kp BACKSPACE                       &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        L1 {
            bindings = <
&kp RA(F4)    &kp LC(W)     &kp LC(T)     &kp F7     &kp ESCAPE                                         &kp LC(E)   &kp LC(U)  &kp RET           &kp LC(S)          &kp LC(H)
&to_romaji    &to_eisu      &kp LC(A)     &kp F10    &kp F2      &kp RA(RIGHT)       &kp LC(R)          &kp LEFT    &kp DOWN   &kp UP            &kp RIGHT          &kp QUESTION
&kp LC(Z)     &kp LC(X)     &kp LC(C)     &kp LC(V)  &kp LC(Y)   &kp LEFT_SHIFT      &kp LC(F)          &kp HOME    &kp END    &kp LC(LG(LEFT))  &kp LC(LG(RIGHT))  &kp EXCLAMATION
&bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &trans     &trans      &trans              &kp RIGHT_CONTROL  &kp DELETE                                                  &kp RC(RA(DELETE))
            >;

            sensor-bindings = <&encoder_msc_right_left>;
        };

        L2 {
            bindings = <
&kp N1            &kp N2             &kp N3     &kp N4                  &kp N5                                              &trans  &trans  &trans  &trans  &trans
&kp N6            &kp N7             &kp N8     &kp N9                  &kp N0                &trans                &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_BRACKET  &kp INT1           &kp EQUAL  &kp PERIOD              &kp SLASH             &kp SINGLE_QUOTE      &trans  &trans  &trans  &trans  &trans  &trans
&kp INT3          &kp RIGHT_BRACKET  &trans     &mt LEFT_CONTROL SPACE  &mt LEFT_SHIFT SPACE  &kp SPACE             &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_DOWN>;
        };

        L3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans          &trans          &trans        &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans          &trans          &trans        &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                         &trans
            >;
        };

        L4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        L5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        L6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
